; Configuration file for AbelianGrape's "Sim Speed" ETCa builds. This file
; is included by the first line of wozmon.s.

; Defining SET_VEC would tell wozmon.s that an interrupt vector needs to be
; set to cause a reset in the event of a fault. The "Sim Speed" builds don't
; support INT, so this doesn't need to be set.
; .set SET_VEC, 1

; Defining CUSTOM_ECHO would tell wozmon.s to include echo.s (a file which
; you can implement to contain a suitable ECHO function for your machine).
; See the included echo.s for the Grape1 architecture.

; This address, if set, is where wozmon will place any variables that it
; needs access to in memory. This space consumes N+6 bytes, where N is
; the desired size of the input buffer. Wozmon only checks that input lines
; are less than 128 characters, so buffer overflow is possible if you pick
; N < 128. Whether or not that's a concern is up to you.
.set VARS, 0x0020
; Instead of VARS, you may set VARS_IN_BSS to have the linker automatically
; allocate memory in the .bss segment for the vars. This will almost certainly
; require creating a suitable linker script for your machine. An example for
; Grape1 is provided. To use a linker script, you must define `LDSCR` in
; make.sh to its path.
; .set VARS_IN_BSS, 1

; These variables define the MMIO addresses for accessing the keyboard.
; KBDCR produces non-zero if there is a pending key event. KBD reads the
; next key event.
.set KBDCR, 4
.set KBD,   5

; This MMIO address writes the given character to the console. 0xA should be
; treated as a newline control character.
.set DSP,   3
; If a custom echo is needed instead, define CUSTOM_ECHO and implement it in
; echo.s.
; .set CUSTOM_ECHO, 1
